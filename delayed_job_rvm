#!/bin/sh
### BEGIN INIT INFO
# Provides:          delayed_job
# Required-Start:    $all
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the APPLICATION delayed_job at boot
# Description:       Enable APPLICATION at boot time.
# chkconfig: - 86 15
### END INIT INFO


. /etc/rc.d/init.d/functions

USER=bondgate
APP_HOME=__APP_FULL_PATH__
ENV=production

set -e
USER=${USER}
TIMEOUT=${TIMEOUT-60}
APP_HOME=${APP_HOME}
APP_ROOT="$APP_HOME/current"
PID=$APP_ROOT/tmp/pids/delayed_job.pid

RVM_NAME=`cat $APP_ROOT/.ruby-version`

RVM_NAME=${RVM_NAME}
ENV=${ENV}
SET_PATH="cd $APP_ROOT && rvm use $RVM_NAME"
CMD="$SET_PATH && cd $APP_ROOT && RUBYOPT='-ropenssl' RAILS_ENV=$ENV bundle exec script/delayed_job start"


action="$1"
set -u


old_pid="$PID.oldbin"


cd $APP_ROOT || exit 1


sig () {
        test -s "$PID" && kill -$1 `cat $PID`
}


oldsig () {
        test -s $old_pid && kill -$1 `cat $old_pid`
}


case $action in
start)

        sig 0 && echo >&2 "Already running" && exit 0
        su - $USER -c "$CMD"
        ;;
stop)
        sig QUIT && exit 0
        echo >&2 "Not running"
        ;;
force-stop)
        sig TERM && exit 0
        echo >&2 "Not running"
        ;;
restart|reload)
        sig HUP && echo reloaded OK && exit 0
        echo >&2 "Couldn't reload, starting '$CMD' instead"
        su - $USER -c "$CMD"
        ;;
upgrade)
        if sig USR2 && sleep 2 && sig 0 && oldsig QUIT
        then
                n=$TIMEOUT
                while test -s $old_pid && test $n -ge 0
                do
                        printf '.' && sleep 1 && n=$(( $n - 1 ))
                done
                echo


                if test $n -lt 0 && test -s $old_pid
                then
                        echo >&2 "$old_pid still exists after $TIMEOUT seconds"
                        exit 1
                fi
                exit 0
        fi
        echo >&2 "Couldn't upgrade, starting '$CMD' instead"
        su - $USER -c "$CMD"
        ;;
reopen-logs)
        sig USR1
        ;;
*)
        echo >&2 "Usage: $0 "
        exit 1
        ;;
esac
