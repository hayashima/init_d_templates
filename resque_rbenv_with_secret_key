#! /bin/sh

### BEGIN INIT INFO
# Provides:          resque
# Required-Start:    $all
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the resque server
# Description:       starts resque
# chkconfig: - 86 15

### END INIT INFO

# Change these to match your app:
USER=bondgate
APP_PATH=__APP_FULL_PATH__
ENV=production

# env
APP_ROOT="$APP_PATH/current"
RBENV_RUBY_VERSION=`cat $APP_ROOT/.ruby-version`
SECRET_KEY_BASE=`cat /dev/urandom | tr -dc '[:alnum:]' | head -c 128`
RBENV_ROOT="/home/$USER/.rbenv"
PATH="$RBENV_ROOT/bin:$RBENV_ROOT/shims:$PATH"
SET_PATH="cd $APP_ROOT; rbenv rehash; rbenv local $RBENV_RUBY_VERSION"
PID="$APP_ROOT/tmp/pids/resque.pid"
DAEMON="SECRET_KEY_BASE=$SECRET_KEY_BASE RAILS_ENV=$ENV PIDFILE=$PID BACKGROUND=yes TERM_CHILD=1 QUEUE=* bundle exec rake environment resque:work"
DAEMON_OPTS=""
CMD="$SET_PATH; $DAEMON $DAEMON_OPTS"
NAME=resque
DESC="Resque for $APP_NAME"
OLD_PID="$PID.oldbin"




cd $APP_ROOT || exit 1




sig () {
       test -s "$PID" && ps ax | awk '{ print $1 }' | grep `cat $PID` && kill -s $1 `cat $PID`
}




oldsig () {
        test -s $OLD_PID && kill -$1 `cat $OLD_PID`
}




case ${1-help} in
start)
        sig 0 && echo >&2 "Already running" && exit 0
        su - $USER -c "$CMD"
        ;;
stop)
        sig QUIT && exit 0
        echo >&2 "Not running"
        ;;
force-stop)
        sig TERM && exit 0
        echo >&2 "Not running"
        ;;
restart|reload)
        sig HUP && echo reloaded OK && exit 0
        echo >&2 "Couldn't reload, starting '$CMD' instead"
        su - $USER -c "$CMD"
        ;;
upgrade)
        sig USR2 && exit 0
        echo >&2 "Couldn't upgrade, starting '$CMD' instead"
        su - $USER -c "$CMD"
        ;;
rotate)
        sig USR1 && echo rotated logs OK && exit 0
        echo >&2 "Couldn't rotate logs" && exit 1
        ;;
*)
        echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
        exit 1
        ;;
esac




exit 0
